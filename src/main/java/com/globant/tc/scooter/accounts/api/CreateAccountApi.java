/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (5.1.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.globant.tc.scooter.accounts.api;

import com.globant.tc.scooter.accounts.entity.AccountEntity;
import com.globant.tc.scooter.accounts.model.createAccountObject;
import com.globant.tc.scooter.accounts.services.CreateAccountApiDelegate;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;

import javax.validation.Valid;

@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2022-03-11T21:44:36.143+05:00[Asia/Karachi]")
@Validated
@Api(value = "createAccount", description = "the createAccount API")
public interface CreateAccountApi {

    default CreateAccountApiDelegate getDelegate() {
        return new CreateAccountApiDelegate() {
        };
    }

    /**
     * POST /createAccount : Create an Account and registered it to an user
     *
     * @param createAccountObject (required)
     * @return Operation success (status code 200)
     * or  (status code 503)
     */
    @ApiOperation(value = "Create an Account and registered it to an user", nickname = "createAccountPost", notes = "", tags = {})
    @ApiResponses(value = {
            @ApiResponse(code = 200, message = "Operation success"),
            @ApiResponse(code = 503, message = "")})
    @PostMapping(
            value = "/createAccount",
            produces = {"application/json"},
            consumes = {"application/json"}
    )
    default ResponseEntity<AccountEntity> createAccountPost(@ApiParam(value = "", required = true) @Valid @RequestBody createAccountObject createAccountObject) {
        return getDelegate().createAccountPost(createAccountObject);
    }

}
